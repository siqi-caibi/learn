package queue.stack;

/**
 * ，先进后出的逻辑顺序，符合某些问题的特点，⽐如说函数调⽤栈。 单调栈实际上就是栈，
 * 只是利⽤了⼀些巧妙的逻辑，使得每次新元素⼊栈后，栈内的元素都保持有序（单调 递增或单调递减）。
 */
public class StackMonotonic {
    /**
     * 给你⼀个数组 nums，请你返回⼀个等⻓的结果数组，结果数组中对应索引存储着下⼀个更⼤元素，如果没有 更⼤的元素，就存 -1。
     * ⽐如说，输⼊⼀个数组 nums = [2,1,2,4,3]，你返回数组 [4,2,4,-1,-1]。
     * 解释：第⼀个 2 后⾯⽐ 2 ⼤的数是 4; 1 后⾯⽐ 1 ⼤的数是 2；第⼆个 2 后⾯⽐ 2 ⼤的数是 4; 4 后⾯没有⽐ 4 ⼤的数，填 -1；3 后
     * ⾯没有⽐ 3 ⼤的数，填 -1。
     */
}
